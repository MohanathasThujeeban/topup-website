# Application Configuration
spring.application.name=topup-backend
server.port=8080

# MongoDB (Spring Boot 3.3+)
# If spring.mongodb.uri is set, it overrides host/port/username/password below
spring.mongodb.database=topup_db
spring.mongodb.host=${MONGO_HOST:localhost}
spring.mongodb.port=${MONGO_PORT:27017}
spring.mongodb.username=${MONGO_USERNAME:}
spring.mongodb.password=${MONGO_PASSWORD:}
spring.mongodb.authentication-database=${MONGO_AUTH_DB:}

# Connection string alternative (recommended for Atlas). Example:
# spring.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/topup_db}

# Additional settings
spring.data.mongodb.auto-index-creation=true

# JWT Configuration
app.jwt.secret=topupSecretKeyThatIsLongEnoughForHS512Algorithm123456789
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# Email Configuration (Gmail example - update with your SMTP settings)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# Application Specific Configuration
app.name=TopUp Pro
app.url=${APP_URL:http://localhost:3000}
app.support.email=${SUPPORT_EMAIL:support@topuppro.com}

# Verification Token Configuration
app.verification.email.expiration-hours=24
app.verification.password-reset.expiration-hours=1

# Rate Limiting Configuration
app.rate-limit.email.max-attempts=5
app.rate-limit.email.time-window-minutes=60

# Logging Configuration
logging.level.com.example.topup.demo=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.mail=DEBUG

# CORS Configuration
app.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Profile specific configurations
spring.profiles.active=dev

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
